// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bankingApp.Restapi.Data;

#nullable disable

namespace bankingApp.Restapi.Migrations
{
    [DbContext(typeof(AccountDbContext))]
    [Migration("20231113192841_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BonifiableInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BonusInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumBalancePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumPaymentDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCashAmountPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCashAmountToPayWithInterest")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44de30e9-6e02-4ca4-b3ad-f75f950dead6"),
                            AvailableBalance = 2000m,
                            BonifiableInterest = 0m,
                            BonusInterest = 0.05m,
                            CardId = new Guid("a747daa4-1b84-4ee7-98cf-17ebc2ff7469"),
                            CurrentBalance = 3000m,
                            MinimumBalancePercentage = 0.10m,
                            MinimumPaymentDue = 0m,
                            TotalCashAmountPayable = 0m,
                            TotalCashAmountToPayWithInterest = 0m
                        });
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a747daa4-1b84-4ee7-98cf-17ebc2ff7469"),
                            CardNumber = "4550030500456732",
                            CreditLimit = 5000m,
                            ExpirationDate = new DateTime(2028, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saúl Laínez",
                            SecurityCode = "123"
                        });
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfc3ddbb-c6d0-4749-bc83-c64eb0a50c42"),
                            AccountId = new Guid("44de30e9-6e02-4ca4-b3ad-f75f950dead6"),
                            Amount = 3000.00m,
                            Date = new DateTime(2023, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Car reparations.",
                            TransactionTypeId = new Guid("648b70c1-8f13-45c9-a7bd-50c1f5b8e358")
                        },
                        new
                        {
                            Id = new Guid("8b90ebcc-0295-48de-97ec-5e6dc543dfba"),
                            AccountId = new Guid("44de30e9-6e02-4ca4-b3ad-f75f950dead6"),
                            Amount = 3150.00m,
                            Date = new DateTime(2023, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            TransactionTypeId = new Guid("f9a01834-7689-4609-963f-b7666724f42a")
                        },
                        new
                        {
                            Id = new Guid("4faf703c-5121-49da-befb-8a52ee46debd"),
                            AccountId = new Guid("44de30e9-6e02-4ca4-b3ad-f75f950dead6"),
                            Amount = 3000.00m,
                            Date = new DateTime(2023, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dell Laptop",
                            TransactionTypeId = new Guid("648b70c1-8f13-45c9-a7bd-50c1f5b8e358")
                        });
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.TransactionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9a01834-7689-4609-963f-b7666724f42a"),
                            Type = "Payment"
                        },
                        new
                        {
                            Id = new Guid("648b70c1-8f13-45c9-a7bd-50c1f5b8e358"),
                            Type = "Purchase"
                        });
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Account", b =>
                {
                    b.HasOne("bankingApp.Restapi.Models.Domain.Card", "Card")
                        .WithOne("Account")
                        .HasForeignKey("bankingApp.Restapi.Models.Domain.Account", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Transaction", b =>
                {
                    b.HasOne("bankingApp.Restapi.Models.Domain.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bankingApp.Restapi.Models.Domain.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.Card", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });

            modelBuilder.Entity("bankingApp.Restapi.Models.Domain.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
